# -*- coding: utf-8 -*-
"""soloss.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y1BTmYfyN_1DnNDTHZzaD4tc8ud-GEGb
"""

import torch

def SOloss(model):
    sum_loss = 0
    base_alpha = 1.01
    for name, param in model.named_parameters():
        if 'weight' in name:
            size = param.size()
            alpha = base_alpha**(500/size[0])
            alphas = alpha ** torch.arange(size[0]).to(param.device)

            if len(size) == 4:
                normalized_sum = torch.sum(torch.abs(param), dim=(1, 2, 3))
                weighted_sum = torch.sum(alphas * normalized_sum) / size[0]
            elif len(size) == 2 and size[0] > 10:
                normalized_sum = torch.sum(torch.abs(param), dim=1)
                weighted_sum = torch.sum(alphas * normalized_sum) / size[0]
            else:
                weighted_sum = 0
            sum_loss += weighted_sum
    return sum_loss