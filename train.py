# -*- coding: utf-8 -*-
"""train.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y1BTmYfyN_1DnNDTHZzaD4tc8ud-GEGb
"""

import torch

def train(model, device, train_loader, optimizer, criterion, epoch, SO, SOloss, layer_clips, check_sparseness):
    model.train()
    beta = 1e-5 if SO else 0
    running_loss = 0.0

    for batch_idx, (data, target) in enumerate(train_loader):
        data, target = data.to(device), target.to(device)
        optimizer.zero_grad()
        output = model(data)
        so_loss = SOloss(model)
        loss_1 = criterion(output, target)
        loss = loss_1 + (so_loss * beta)
        loss.backward()
        optimizer.step()
        running_loss += loss.item()

    if epoch > 0:
        layer_clips(model, 5e-4 if SO else 1e-7)

    print(f"Epoch {epoch} | CE loss: {loss_1:.4f} | SO loss: {so_loss*beta:.4f}")
    sparsity, trail, sparse_list = check_sparseness(model)
    print(f"Trail sparse: {trail}\nSparsity list: {sparse_list}\nTotal sparsity: {sparsity:.4f}")

    return running_loss / len(train_loader), trail